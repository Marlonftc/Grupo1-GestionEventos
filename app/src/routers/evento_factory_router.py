from src.factories.evento_social_factory import EventoSocialFactory
from src.factories.evento_academico_factory import EventoAcademicoFactory
from src.factories.evento_deportivo_factory import EventoDeportivoFactory

class EventoFactoryRouter:
    """
    F치brica general que selecciona la sub-f치brica correcta seg칰n la categor칤a del evento.
    Implementa el patr칩n Factory Method para delegar la creaci칩n de eventos a las f치bricas especializadas.
    """

    def __init__(self, categoria):
        """
        Constructor del enrutador de f치bricas de eventos.

        :param categoria: Categor칤a del evento (ej. "social", "academico", "deportivo").
        """
        self.categoria = categoria

    def obtener_factory(self):
        """
        Retorna la f치brica correspondiente seg칰n la categor칤a del evento.

        :return: Instancia de la f치brica de eventos correspondiente.
        :raises ValueError: Si la categor칤a no es v치lida.
        """
        if self.categoria == "social":
            return EventoSocialFactory()  # 游댳 Retorna la f치brica de eventos sociales
        elif self.categoria == "academico":
            return EventoAcademicoFactory()  # 游댳 Retorna la f치brica de eventos acad칠micos
        elif self.categoria == "deportivo":
            return EventoDeportivoFactory()  # 游댳 Retorna la f치brica de eventos deportivos
        else:
            raise ValueError(f"Categor칤a no soportada: {self.categoria}")
